[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=5;
alias userSP R10;
userSP=SP;
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11] * 512 - 1;
alias filedescriptor R4;
alias retval R12;

retval=([PTBR+2*(userSP-1)/512]*512)+((userSP-1)%512);
filedescriptor=[[PTBR+2*(userSP-4)/512]*512 + (userSP-4)%512];

alias word R5;
word=[[PTBR+2*((userSP-3)/512)]*512+((userSP-3)%512)];

alias pte R11;
pte=PROCESS_TABLE+16*[SYSTEM_STATUS_TABLE+1];

if(filedescriptor==-2)then
	
	multipush(R0,R1,R2,R3,R4,R6,R11,R10);
	alias terminal_write R1;
	alias pid R2;
	alias word1 R3;
	terminal_write=3;
	pid=[SYSTEM_STATUS_TABLE + 1];
	word1=word;
	call MOD_4;
	multipop(R0,R1,R2,R3,R4,R6,R11,R10);
		[retval]=0;
	
	[pte+9]=0;
	SP=userSP;
	ireturn;
endif;

if(filedescriptor<0 || filedescriptor>7)then
		[retval]=-1;
		[pte+9]=0;
		SP=[pte+13];
		ireturn;
endif;	

alias ppr R8;
	ppr=[pte+11]*512+496;
	
	if([ppr+2*filedescriptor]!=0)then	
		[retval]=-1;
		[pte+9]=0;
		SP=[pte+13];
		ireturn;
endif;

alias o_index R6;
o_index=[ppr+2*filedescriptor+1];
	
alias in_entry R7;
in_entry=[OPEN_FILE_TABLE+(o_index*4)];


if( [pte+4]==0)then
if([pte+3]!=0)then
if([pte+3]!=[INODE_TABLE+in_entry*16+3])then
		[retval]=-3;
		[pte+9]=0;
		SP=[pte+13];
		ireturn;
endif;
endif;
endif;

	
multipush(R1,R2,R3,R4,R5,R6,R8,R9,R10,R11,R12);
	alias functionnum R1;
	functionnum=4;
	call MOD_0;
multipop(R1,R2,R3,R4,R5,R6,R8,R9,R10,R11,R12);

if(R0==-1)then
[retval]=-1;
[pte+9]=0;
SP=[pte+13];
ireturn;
endif;



alias lseek R9;
lseek=[OPEN_FILE_TABLE+(o_index*4)+2];

if(lseek==MAX_FILE_SIZE)then
		multipush(R1,R2,R3,R4,R5,R6,R8,R9,R10,R11,R12);
		alias functionnum R1;
		functionnum=5;
		call MOD_0;
		multipop(R1,R2,R3,R4,R5,R6,R8,R9,R10,R11,R12);		
		
		
		[retval]=-2;
		[pte+9]=0;
		SP=[pte+13];
	ireturn;
endif;

if((lseek % 512== 0)&&(lseek==[INODE_TABLE+(in_entry*16)+2]))then
		multipush(R1,R2,R3,R4,R5,R6,R8,R9,R10,R11,R12);
		alias functionnum R1;
		functionnum=3;
		call MOD_2;
		multipop(R1,R2,R3,R4,R5,R6,R8,R9,R10,R11,R12);

if(R0==-1)then
[retval]=-2;
[pte+9]=0;
SP=[pte+13];
ireturn;
endif;

[INODE_TABLE+in_entry*16+8+(lseek/512)]=R0;
endif;

		alias blknum R1;
		blknum=lseek/512;
		alias disk_num R2;
		disk_num=[INODE_TABLE+16*in_entry+blknum+8];
		alias offset R3;
		offset=lseek%512;


	multipush(R1,R4,R6,R7,R8,R9,R10,R11,R12);
	alias functionnum R1;
	functionnum=1;
	R4=word;
	call MOD_3;
	multipop(R1,R4,R6,R7,R8,R9,R10,R11,R12);	

if(lseek==[INODE_TABLE+(in_entry*16)+2])then
	[INODE_TABLE+in_entry*16+2]=[INODE_TABLE+in_entry*16+2]+1;
	[ROOT_FILE+in_entry*8+1]=[ROOT_FILE+in_entry*8+1]+1;
endif;

[OPEN_FILE_TABLE+o_index*4+2]=[OPEN_FILE_TABLE+o_index*4+2]+1;

multipush(R1,R2,R3,R4,R5,R6,R8,R9,R10,R11,R12);
		alias functionnum1 R1;
		functionnum1=5;
		call MOD_0;
multipop(R1,R2,R3,R4,R5,R6,R8,R9,R10,R11,R12);	

[retval]=0;
[pte+9]=0;
SP=[pte+13];
ireturn;

