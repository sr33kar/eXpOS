alias userSP R9;
userSP=SP;

alias syscall R3;
alias filename R5;
syscall=[([PTBR + 2 * ((userSP - 5)/ 512)] * 512) + (userSP - 5) % 512];
[PROCESS_TABLE+16*[SYSTEM_STATUS_TABLE+1]+13]=SP;
SP=([PROCESS_TABLE+16*[SYSTEM_STATUS_TABLE+1]+11])*512-1;
alias retval R2;
alias pte R4;
retval=([PTBR+2*(userSP-1)/512]*512)+((userSP-1)%512);
pte=PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16;


if(syscall==2)then
[pte+9]=2;
	
	filename=[[PTBR+2*((userSP-4)/512)]*512 +(userSP - 4) % 512];
	
	alias ppr R7;
	ppr=[pte+11]*512+496;
	alias index R6;
	index=0;
	alias cnt R8;
	cnt=0;
		while(index<8)do
			if([ppr+2*index] != 1 &&[ppr+2*index ] !=0)then
				
				cnt=1;
			break;
			endif;
		index=index+1;
		endwhile;
	
		if(cnt==0)then
			[retval]=-3;
			[pte+9]=0;
		SP=[pte+13];
		ireturn;
		endif;

	multipush(R1,R2,R3,R4,R6,R7);
	alias functionNum R1;
	functionNum=3;
	call MOD_3;
	multipop(R1,R2,R3,R4,R6,R7);
	if(R0==-1 && R0==-2)then
		[retval]=R0;
		[pte+9]=0;
		SP=[pte+13];
		ireturn;		
	endif;
	
	[ppr+2*index]=0;

	alias o_index R8;
	o_index=R0;
	[ppr+2*index+1]=o_index;
		[retval]=index;
		[pte+9]=0;
		SP=[pte+13];
		ireturn;
endif;


if(syscall==3)then
[pte+9]=3;	

alias index R5;
	index=[[PTBR+2*((userSP-4)/512)]*512 +(userSP - 4) % 512];
	
	if(index<0 ||index>7)then
	[retval]=-1;
	
		[pte+9]=0;
		SP=[pte+13];
		ireturn;	
	endif;	
	
	alias ppr R7;
	ppr=[pte+11]*512+496;
	
	if([ppr+2*index]!=0)then
			[retval]=-1;
		[pte+9]=0;
		SP=[pte+13];
		ireturn;	
	endif;	
	alias o_index R8;
	o_index=[ppr+2*index+1];
	
	multipush(R1,R2,R3,R4,R5);
	alias functionNum1 R1;
	functionNum1=4;
	R4=o_index;
	call MOD_3;
	multipop(R1,R2,R3,R4,R5);
	
[ppr+2*index]=-1;
[ppr+2*index+1]=-1;

[retval]=0;
		[pte+9]=0;
		SP=[pte+13];
		ireturn;
endif;


if(syscall==6)then
breakpoint;
[pte+9]=6;

alias index R5;
	index=[[PTBR+2*((userSP-4)/512)]*512 +(userSP - 4) % 512];	
alias offset R6;
	offset=[[PTBR+2*((userSP-3)/512)]*512 +(userSP - 3) % 512];

alias ppr R10;
	ppr=[pte+11]*512+496;

	if(index<0 ||index>7)then
	[retval]=-1;
		if([ppr+2*index]!=0)then
				[retval]=-1;
				[pte+9]=0;
			SP=[pte+13];
			ireturn;	
		endif;	
	endif;
alias o_index R8;
	o_index=[ppr+2*index+1];
alias in_index R7;
	in_index=[OPEN_FILE_TABLE+(o_index*4)];

multipush(R1,R2,R3,R4,R5,R6,R8,R9,R10,R12);
	alias functionnum R1;
	functionnum=4;
	call MOD_0;
multipop(R1,R2,R3,R4,R5,R6,R8,R9,R10,R12);

	if(R0==-1)then
	[retval]=-1;
		[pte+9]=0;
		SP=[pte+13];
		ireturn;
	endif;

alias lseek R11;
lseek=[OPEN_FILE_TABLE+(o_index*4)+2];
breakpoint;
	if((lseek+offset) < 0)then

	multipush(R1,R2,R3,R4,R5,R6,R8,R9,R10,R12);
			alias functionnum2 R1;
			functionnum2=5;
			call MOD_0;
	multipop(R1,R2,R3,R4,R5,R6,R8,R9,R10,R12);


		[retval]=-2;
		[pte+9]=0;
		SP=[pte+13];
		ireturn;
endif;

if(offset==0)then
[OPEN_FILE_TABLE+(o_index*4)+2]=0;
else
	if((lseek+offset)>[INODE_TABLE+in_index*16+2])then
	breakpoint;
	lseek=[INODE_TABLE+in_index*16+2];
	else
	[OPEN_FILE_TABLE+(o_index*4)+2]=lseek+offset;
	endif;
endif;

multipush(R1,R2,R3,R4,R5,R6,R8,R9,R10,R12);
		alias functionnum2 R1;
		functionnum2=5;
		call MOD_0;
multipop(R1,R2,R3,R4,R5,R6,R8,R9,R10,R12);

[retval]=0;
		[pte+9]=0;
		SP=[pte+13];
		ireturn;
endif;
